<?php

require_once __DIR__ . '/vendor/autoload.php';

// Setup Laravel application
$app = require_once __DIR__ . '/bootstrap/app.php';
$app->make(\Illuminate\Contracts\Console\Kernel::class)->bootstrap();

use Illuminate\Support\Facades\Mail;
use App\Mail\Client\ClientPendingEmail;
use App\Mail\Restaurant\RestauranPendingEmail;
use App\Mail\Admin\AdminPendingEmail;

echo "­ЪЊД Email рЃбрЃћрЃАрЃбрЃў рЃарЃљрЃЏрЃЊрЃћрЃюрЃўрЃЏрЃћ рЃЏрЃўрЃАрЃљрЃЏрЃљрЃарЃЌрЃќрЃћ\n";
echo "=====================================\n\n";

// Test emails list
$testEmails = [
    'david.gakhokia@gmail.com',
    'gakhokia.david@gmail.com', 
    'dev.foodly@gmail.com',
    'foodly.portal@gmail.com'
];

// Create test reservation
$testReservation = (object) [
    'id' => 12345,
    'name' => 'рЃЊрЃљрЃЋрЃўрЃЌ рЃњрЃљрЃ«рЃЮрЃЎрЃўрЃљ',
    'email' => 'david.gakhokia@gmail.com',
    'phone' => '+995555123456',
    'reservation_date' => now()->addDay()->format('Y-m-d'),
    'time_from' => '19:00',
    'time_to' => '21:00',
    'guests_count' => 4,
    'status' => 'Pending',
    'notes' => 'рЃбрЃћрЃАрЃб рЃарЃћрЃќрЃћрЃарЃЋрЃљрЃфрЃўрЃљ Email-рЃћрЃЉрЃўрЃА рЃерЃћрЃАрЃљрЃЏрЃЮрЃгрЃЏрЃћрЃЉрЃџрЃљрЃЊ',
    'type' => 'restaurant',
    'reservable_type' => 'App\\Models\\Restaurant',
    'reservable_id' => 1
];

// Add method for restaurant name
class TestReservation {
    public $id;
    public $name;
    public $email;
    public $phone;
    public $reservation_date;
    public $time_from;
    public $time_to;
    public $guests_count;
    public $status;
    public $notes;
    public $type;
    public $reservable_type;
    public $reservable_id;
    
    public function __construct($data) {
        foreach ($data as $key => $value) {
            $this->$key = $value;
        }
    }
    
    public function getRestaurantName() {
        return 'рЃбрЃћрЃАрЃб рЃарЃћрЃАрЃбрЃЮрЃарЃљрЃюрЃў';
    }
}

$reservation = new TestReservation((array)$testReservation);

echo "­Ъј» рЃбрЃћрЃАрЃб рЃарЃћрЃќрЃћрЃарЃЋрЃљрЃфрЃўрЃљ:\n";
echo "   ID: {$reservation->id}\n";
echo "   рЃЎрЃџрЃўрЃћрЃюрЃбрЃў: {$reservation->name}\n";
echo "   рЃЌрЃљрЃарЃўрЃдрЃў: {$reservation->reservation_date}\n";
echo "   рЃЊрЃарЃЮ: {$reservation->time_from} - {$reservation->time_to}\n\n";

foreach ($testEmails as $email) {
    echo "­ЪЊ« рЃбрЃћрЃАрЃбрЃўрЃарЃћрЃЉрЃљ: $email\n";
    
    try {
        // 1. Simple test email
        echo "   РєЌ№ИЈ рЃЏрЃљрЃарЃбрЃўрЃЋрЃў рЃбрЃћрЃАрЃб...\n";
        Mail::raw("рЃћрЃА рЃљрЃарЃўрЃА рЃбрЃћрЃАрЃб рЃерЃћрЃбрЃДрЃЮрЃЉрЃўрЃюрЃћрЃЉрЃљ $email рЃЏрЃўрЃАрЃљрЃЏрЃљрЃарЃЌрЃќрЃћ", function ($message) use ($email) {
            $message->to($email)
                    ->subject('­ЪДф Foodly рЃбрЃћрЃАрЃб Email - ' . now()->format('H:i:s'));
        });
        echo "   РюЁ рЃЏрЃљрЃарЃбрЃўрЃЋрЃў рЃбрЃћрЃАрЃбрЃў рЃњрЃљрЃўрЃњрЃќрЃљрЃЋрЃюрЃљ\n";
        
        // 2. Client pending email
        echo "   РєЌ№ИЈ рЃЎрЃџрЃўрЃћрЃюрЃбрЃўрЃА Email...\n";
        $clientMail = new ClientPendingEmail($reservation);
        Mail::to($email)->send($clientMail);
        echo "   РюЁ рЃЎрЃџрЃўрЃћрЃюрЃбрЃўрЃА Email рЃњрЃљрЃўрЃњрЃќрЃљрЃЋрЃюрЃљ\n";
        
        // 3. Restaurant pending email
        echo "   РєЌ№ИЈ рЃарЃћрЃАрЃбрЃЮрЃарЃюрЃўрЃА Email...\n";
        $restaurantMail = new RestauranPendingEmail($reservation);
        Mail::to($email)->send($restaurantMail);
        echo "   РюЁ рЃарЃћрЃАрЃбрЃЮрЃарЃюрЃўрЃА Email рЃњрЃљрЃўрЃњрЃќрЃљрЃЋрЃюрЃљ\n";
        
        // 4. Admin pending email  
        echo "   РєЌ№ИЈ рЃљрЃЊрЃЏрЃўрЃюрЃўрЃА Email...\n";
        $adminMail = new AdminPendingEmail($reservation);
        Mail::to($email)->send($adminMail);
        echo "   РюЁ рЃљрЃЊрЃЏрЃўрЃюрЃўрЃА Email рЃњрЃљрЃўрЃњрЃќрЃљрЃЋрЃюрЃљ\n";
        
        echo "   ­ЪјЅ рЃДрЃЋрЃћрЃџрЃљ Email рЃгрЃљрЃарЃЏрЃљрЃбрЃћрЃЉрЃўрЃЌ рЃњрЃљрЃўрЃњрЃќрЃљрЃЋрЃюрЃљ!\n\n";
        
        // Wait between emails to avoid rate limiting
        sleep(2);
        
    } catch (Exception $e) {
        echo "   РЮї рЃерЃћрЃфрЃЊрЃЮрЃЏрЃљ: " . $e->getMessage() . "\n";
        echo "   ­ЪЊЇ рЃцрЃљрЃўрЃџрЃў: " . $e->getFile() . ":" . $e->getLine() . "\n\n";
    }
}

echo "­ЪЊі рЃерЃћрЃ»рЃљрЃЏрЃћрЃЉрЃљ:\n";
echo "=============\n";
echo "РюЁ рЃњрЃљрЃњрЃќрЃљрЃЋрЃюрЃўрЃџрЃўрЃљ рЃбрЃћрЃАрЃб Email-рЃћрЃЉрЃў " . count($testEmails) . " рЃЏрЃўрЃАрЃљрЃЏрЃљрЃарЃЌрЃќрЃћ\n";
echo "­ЪЊД рЃЌрЃўрЃЌрЃЮрЃћрЃБрЃџ рЃЏрЃўрЃАрЃљрЃЏрЃљрЃарЃЌрЃќрЃћ рЃњрЃљрЃўрЃњрЃќрЃљрЃЋрЃюрЃљ 4 рЃАрЃљрЃ«рЃћрЃЮрЃЉрЃўрЃА Email:\n";
echo "   1. рЃЏрЃљрЃарЃбрЃўрЃЋрЃў рЃбрЃћрЃАрЃб рЃерЃћрЃбрЃДрЃЮрЃЉрЃўрЃюрЃћрЃЉрЃљ\n";
echo "   2. рЃЎрЃџрЃўрЃћрЃюрЃбрЃўрЃА Pending Email (styled)\n";
echo "   3. рЃарЃћрЃАрЃбрЃЮрЃарЃюрЃўрЃА Pending Email (styled)\n";
echo "   4. рЃљрЃЊрЃЏрЃўрЃюрЃўрЃА Pending Email (styled)\n\n";

echo "­ЪћЇ рЃерЃћрЃљрЃЏрЃЮрЃгрЃЏрЃћрЃЌ Inbox-рЃћрЃЉрЃў:\n";
foreach ($testEmails as $email) {
    echo "   ­ЪЊг $email\n";
}

echo "\n­ЪњА рЃЌрЃБ Email-рЃћрЃЉрЃў рЃљрЃа рЃЏрЃЮрЃЊрЃўрЃА:\n";
echo "   1. рЃерЃћрЃљрЃЏрЃЮрЃгрЃЏрЃћрЃЌ Spam/Junk folder\n";
echo "   2. рЃерЃћрЃљрЃЏрЃЮрЃгрЃЏрЃћрЃЌ Laravel logs: storage/logs/laravel.log\n";
echo "   3. рЃерЃћрЃљрЃЏрЃЮрЃгрЃЏрЃћрЃЌ SMTP settings .env рЃцрЃљрЃўрЃџрЃерЃў\n";
echo "   4. рЃЕрЃљрЃарЃЌрЃћрЃЌ queue worker: php artisan queue:work\n\n";

echo "­Ъј» рЃбрЃћрЃАрЃбрЃў рЃЊрЃљрЃАрЃарЃБрЃџрЃЊрЃљ!\n";
